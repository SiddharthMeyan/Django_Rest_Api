{"version":3,"sources":["Nav.jsx","App.js","index.js"],"names":["Nav","className","href","App","useState","todolist","setTodolist","editing","setEditing","id","title","completed","activeitem","setActiveitem","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","useEffect","fetchTasks","a","fetch","then","response","json","api_data","comp","todo","csrftoken","url","method","headers","body","JSON","stringify","console","log","onSubmit","e","preventDefault","type","onChange","value","target","placeholder","style","width","scope","map","onDoubleClick","onClick","handleUpdate","xmlns","height","fill","class","viewBox","d","fill-rule","handleDelete","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f9f5b59.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Nav = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">\n            TODO\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Nav } from \"./Nav\";\n\nfunction App() {\n  const [todolist, setTodolist] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [activeitem, setActiveitem] = useState({\n    id: null,\n    title: \"\",\n    completed: false,\n  });\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\") {\n      const cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  const fetchTasks = async () => {\n    const api_data = await fetch(\"http://localhost:8000/api/task-list/\").then(\n      (response) => response.json()\n    );\n    setTodolist(api_data);\n  };\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setActiveitem({ ...activeitem, title: value });\n  };\n\n  const handleDelete = (id) => {\n    const csrftoken = getCookie(\"csrftoken\");\n    fetch(`http://localhost:8000/api/task-delete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": csrftoken,\n      },\n    }).then((response) => fetchTasks());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const csrftoken = getCookie(\"csrftoken\");\n\n    let url = `http://localhost:8000/api/task-create`;\n    if (editing === true) {\n      url = `http://localhost:8000/api/task-update/${activeitem.id}`;\n      setEditing(false);\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify(activeitem),\n    }).then((response) => {\n      fetchTasks();\n      setActiveitem({\n        id: null,\n        title: \"\",\n        completed: false,\n      });\n    });\n  };\n\n  const handleUpdate = (todo) => {\n    const csrftoken = getCookie(\"csrftoken\");\n    setActiveitem(todo);\n    setEditing(true);\n    // handleSubmit();\n  };\n\n  const comp = (todo) => {\n    const csrftoken = getCookie(\"csrftoken\");\n    todo.completed = !todo.completed;\n    const url = `http://localhost:8000/api/task-update/${todo.id}`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify({ completed: todo.completed, title: todo.title }),\n    }).then(() => {\n      fetchTasks();\n    });\n    console.log(todo.completed);\n  };\n\n  return (\n    <>\n      <div className=\"outer\">\n        <Nav />\n        <div className=\"container\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"my-2\">\n              <input\n                name=\"title\"\n                id=\"title\"\n                type=\"text\"\n                className=\"form-control\"\n                onChange={handleChange}\n                value={activeitem.title}\n                placeholder=\"Enter Task\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary my-2\">\n              Submit\n            </button>\n          </form>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div className=\"container\" style={{ width: \"50vh\" }}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">id</th>\n                <th scope=\"col\">Task</th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            {todolist.map((todo, i) => (\n              <tbody key={todo.id}>\n                <tr onDoubleClick={(e) => comp(todo)}>\n                  <th scope=\"row\">{i + 1}</th>\n                  {todo.completed == false ? (\n                    <td>{todo.title}</td>\n                  ) : (\n                    <td>\n                      <s>{todo.title}</s>\n                    </td>\n                  )}\n                  <td>\n                    <button\n                      onClick={(e) => handleUpdate(todo)}\n                      className=\"btn btn-info mx-2\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"currentColor\"\n                        class=\"bi bi-pencil-square\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                        <path\n                          fill-rule=\"evenodd\"\n                          d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\n                        />\n                      </svg>\n                    </button>\n\n                    <button\n                      onClick={(e) => handleDelete(todo.id)}\n                      className=\"btn btn-danger\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"currentColor\"\n                        class=\"bi bi-trash-fill\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\n                      </svg>\n                    </button>\n                    <button\n                      onClick={(e) => comp(todo)}\n                      className=\"btn btn-success mx-2\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"currentColor\"\n                        class=\"bi bi-check2\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\" />\n                      </svg>\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}